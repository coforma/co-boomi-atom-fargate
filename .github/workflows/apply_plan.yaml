name: Apply plan
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    paths:
      - '**.tf'
      - '**.py'
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    runs-on: ubuntu-latest
    name: Apply terraform plan
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # Restore cached directory
      - name: Cache lambda package deps
        uses: actions/cache@v3
        with:
          path: ./lambda/package
          key: ${{ runner.os }}-lambda-package-${{ hashFiles('./lambda/requirements.txt') }}

      - name: Add lambda deps
        run: |
          pip install --target ./lambda/package -r ./lambda/requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        with:
          auto_approve: true
        env:
          TF_VAR_boomi_account_id: ${{ secrets.TF_VAR_BOOMI_ACCOUNT_ID }}
          TF_VAR_boomi_auth_token: ${{ secrets.TF_VAR_BOOMI_AUTH_TOKEN }}
          TF_VAR_boomi_username: ${{ secrets.TF_VAR_BOOMI_USERNAME }}
          TF_VAR_owner: ${{ secrets.TF_VAR_OWNER }}