{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "cognito-identity:GetCredentialsForIdentity",
        "sts:GetCallerIdentity",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeVpcs",
        "ec2:CreateRouteTable",
        "ec2:CreateInternetGateway",
        "ec2:CreateTags",
        "ec2:CreateSubnet",
        "ec2:CreateSecurityGroup",
        "ssm:DescribeParameters",
        "ec2:AssociateRouteTable",
        "ec2:DisassociateRouteTable",
        "ecs:CreateCluster",
        "ecs:RegisterTaskDefinition",
        "ecs:DescribeTaskDefinition",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeRouteTables",
        "secretsmanager:CreateSecret",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeInternetGateways",
        "ec2:AllocateAddress",
        "ec2:DescribeAddresses",
        "ec2:DescribeNatGateways",
        "ec2:CreateNatGateway",
        "ec2:ReleaseAddress",
        "ec2:DisassociateAddress",
        "ec2:DeleteNatGateway",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSubnet",
        "ec2:DeleteInternetGateway",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:DeleteSecurityGroup",
        "ec2:AuthorizeSecurityGroupIngress",
        "ecs:DeregisterTaskDefinition",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DeleteNetworkAclEntry",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateRoute",
        "ec2:AttachInternetGateway",
        "ec2:DetachInternetGateway",
        "ec2:CreateVpc",
        "ec2:ModifyVpcAttribute",
        "ec2:DeleteVpc"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": [
        "arn:aws:iam::{AWS_ACCOUNT_ID}:role/{APPLICATION_NAME}-secret-install-lambda",
        "arn:aws:iam::{AWS_ACCOUNT_ID}:role/{APPLICATION_NAME}-execution-task-role"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject"
      ],
      "Resource": [
        "arn:aws:s3:::{APPLICATION_NAME}-tfstate/*",
        "arn:aws:s3:::{APPLICATION_NAME}-tfstate"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "dynamodb:PutItem",
        "dynamodb:GetItem",
        "dynamodb:DeleteItem"
      ],
      "Resource": "arn:aws:dynamodb:us-east-1:{AWS_ACCOUNT_ID}:table/{APPLICATION_NAME}-dynamo-lock"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ssm:PutParameter",
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:DeleteParameter",
        "ssm:ListTagsForResource"
      ],
      "Resource": "arn:aws:ssm:us-east-1:{AWS_ACCOUNT_ID}:parameter/{APPLICATION_NAME}/*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogGroup",
        "logs:PutRetentionPolicy",
        "logs:ListTagsLogGroup",
        "logs:DeleteLogGroup",
        "logs:DescribeLogGroups"
      ],
      "Resource": [
        "arn:aws:logs:us-east-1:{AWS_ACCOUNT_ID}:log-group:/aws/ecs/{APPLICATION_NAME}-cluster:*",
        "arn:aws:logs:us-east-1:{AWS_ACCOUNT_ID}:log-group:/fargate/service/{APPLICATION_NAME}:*",
        "arn:aws:logs:us-east-1:{AWS_ACCOUNT_ID}:log-group:/aws/lambda/{APPLICATION_NAME}-secret-install-lambda:*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetResourcePolicy",
        "secretsmanager:PutSecretValue",
        "secretsmanager:PutResourcePolicy",
        "secretsmanager:GetSecretValue",
        "secretsmanager:RotateSecret",
        "secretsmanager:DeleteResourcePolicy",
        "secretsmanager:CancelRotateSecret",
        "secretsmanager:DeleteSecret"
      ],
      "Resource": "arn:aws:secretsmanager:us-east-1:{AWS_ACCOUNT_ID}:secret:/{APPLICATION_NAME}/prod/boomi-install-token-*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreateRole",
        "iam:ListAttachedRolePolicies",
        "iam:GetRole",
        "iam:ListRolePolicies",
        "iam:AttachRolePolicy",
        "iam:DetachRolePolicy",
        "iam:ListInstanceProfilesForRole",
        "iam:DeleteRole"
      ],
      "Resource": "arn:aws:iam::{AWS_ACCOUNT_ID}:role/{APPLICATION_PREFIX}-*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreatePolicy",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:ListPolicyVersions",
        "iam:DeletePolicy"
      ],
      "Resource": "arn:aws:iam::{AWS_ACCOUNT_ID}:policy/{APPLICATION_PREFIX}-*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "lambda:CreateFunction",
        "lambda:GetFunction",
        "lambda:ListVersionsByFunction",
        "lambda:GetFunctionCodeSigningConfig",
        "lambda:AddPermission",
        "lambda:GetPolicy",
        "lambda:RemovePermission",
        "lambda:DeleteFunction"
      ],
      "Resource": "arn:aws:lambda:us-east-1:{AWS_ACCOUNT_ID}:function:{APPLICATION_PREFIX}-*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ecs:DeleteService",
        "ecs:CreateService",
        "ecs:DescribeServices",
        "ecs:UpdateService"
      ],
      "Resource": "arn:aws:ecs:us-east-1:{AWS_ACCOUNT_ID}:service/{APPLICATION_PREFIX}-*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ecs:DeleteCluster",
        "ecs:DescribeClusters"
      ],
      "Resource": "arn:aws:ecs:us-east-1:{AWS_ACCOUNT_ID}:cluster/{APPLICATION_PREFIX}-*"
    }
  ]
}